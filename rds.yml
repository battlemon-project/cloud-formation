AWSTemplateFormatVersion: 2010-09-09

Description: RDS layer

Parameters:
  DatabaseUsername:
    Description: Database username
    Type: String
    Default: postgres

  DatabaseName:
    Description: Database name
    Type: String
    Default: postgres

  DatabasePort:
    Description: Database port
    Type: Number
    Default: 5432

#  LemolandBackendPort:
#    Description: Lemoland backend port
#    Type: Number
#    Default: 3000

#  LemolandBackendECRRepositoryURI:
#    Description: Lemoland backend repository's URI of Amazon Container Registry
#    Type: String
#    Default: "987666890397.dkr.ecr.eu-central-1.amazonaws.com/lemoland-api-nodejs:latest"

Resources:
  # Database
  DatabaseSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: BattlemonDatabaseSecret
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DatabaseUsername}"}'
        GenerateStringKey: "password"
        PasswordLength: 20
        ExcludeCharacters: '"@/\'

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable database access on port (default 5432) only from Private Subnets 1 and 2
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref DatabasePort
          ToPort: !Ref DatabasePort
          CidrIp: !ImportValue BattlemonPrivateSubnet1CIDR
        - IpProtocol: tcp
          FromPort: !Ref DatabasePort
          ToPort: !Ref DatabasePort
          CidrIp: !ImportValue BattlemonPrivateSubnet2CIDR
      VpcId: !ImportValue BattlemonVpcId
      Tags:
        - Key: Name
          Value: BattlemonDatabaseSecurityGroup

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for RDS database
      SubnetIds:
        - !ImportValue BattlemonPrivateSubnet3
        - !ImportValue BattlemonPrivateSubnet4
      Tags:
        - Key: Name
          Value: BattlemonDatabaseSubnetGroup

  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      AvailabilityZone: !Select [ 0, !GetAZs  "" ]
      BackupRetentionPeriod: 0
      DBInstanceClass: db.t3.micro
      DBInstanceIdentifier: BattlemonDatabaseInstance
      DBName: !Ref DatabaseName
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      Engine: postgres
      EngineVersion: 15.2
      MasterUsername: !Sub '{{resolve:secretsmanager:${DatabaseSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DatabaseSecret}:SecretString:password}}'
      MultiAZ: false
      Port: !Ref DatabasePort
      PubliclyAccessible: false
      StorageEncrypted: false
      VPCSecurityGroups: [ !Ref DatabaseSecurityGroup ]

#  # Application Load Balancer
#  ALBSecurityGroup:
#    Type: AWS::EC2::SecurityGroup
#    Properties:
#      GroupDescription: Enable HTTP and HTTPS access on port 80/443
#      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: 80
#          ToPort: 80
#          CidrIp: 0.0.0.0/0
#        - IpProtocol: tcp
#          FromPort: 443
#          ToPort: 443
#          CidrIp: 0.0.0.0/0
#      VpcId: !Ref VPC
#      Tags:
#        - Key: Name
#          Value: !Sub ${StackAlias}ALBSecurityGroup
#
#  ApplicationLoadBalancer:
#    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
#    Properties:
#      Name: !Sub ${StackAlias}ALB
#      SecurityGroups: [ !Ref ALBSecurityGroup ]
#      Subnets: [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]
#
#  ALBListenerNoSslCertificate:
#    Type: AWS::ElasticLoadBalancingV2::Listener
#    Properties:
#      DefaultActions:
#        #        - Type: redirect
#        #          RedirectConfig:
#        #            Host: "#{host}"
#        #            Path: "/#{path}"
#        #            Port: "443"
#        #            Protocol: HTTPS
#        #            StatusCode: HTTP_301
#        - Type: forward
#          TargetGroupArn: !Ref ALBTargetGroup
#      LoadBalancerArn: !Ref ApplicationLoadBalancer
#      Port: 80
#      Protocol: HTTP
#
#  # Implement it later when issue certs for domain
#  #  ALBListenerSslCertificate:
#  #    Type: AWS::ElasticLoadBalancingV2::Listener
#  #    Properties:
#  #      Certificates:
#  #        - CertificateArn: !Ref AcmCertificate
#  #      DefaultActions:
#  #        - Type: forward
#  #          TargetGroupArn: !Ref ALBTargetGroup
#  #      LoadBalancerArn: !Ref ApplicationLoadBalancer
#  #      Port: 443
#  #      Protocol: HTTPS
#
#  ALBTargetGroup:
#    Type: AWS::ElasticLoadBalancingV2::TargetGroup
#    Properties:
#      HealthCheckIntervalSeconds: 10
#      HealthCheckPath: /healthcheck
#      HealthCheckTimeoutSeconds: 5
#      HealthyThresholdCount: 2
#      Matcher:
#        HttpCode: "200"
#      Port: !Ref LemolandBackendPort
#      Name: !Sub ${StackAlias}LemolandBackend
#      Protocol: HTTP
#      TargetType: ip
#      UnhealthyThresholdCount: 5
#      VpcId:
#        !Ref VPC
#
#  # Backend cluster
#  LemolandSecurityGroup:
#    Type: AWS::EC2::SecurityGroup
#    Properties:
#      GroupDescription: Enable HTTP access via ALB on port 3000 by default, but can be overwritten by LemolandBackendPort parameter
#      SecurityGroupIngress:
#        - IpProtocol: tcp
#          FromPort: !Ref LemolandBackendPort
#          ToPort: !Ref LemolandBackendPort
#          CidrIp: !Ref VpcCIDR
#      VpcId: !Ref VPC
#      Tags:
#        - Key: Name
#          Value: !Sub ${StackAlias}LemolandSecurityGroup
#
#  LemolandBackendCluster:
#    Type: AWS::ECS::Cluster
#    Properties:
#      ClusterName: !Sub ${StackAlias}LemolandBackendCluster
#      CapacityProviders:
#        - FARGATE
#        - FARGATE_SPOT
#      DefaultCapacityProviderStrategy:
#        - CapacityProvider: FARGATE
#          Weight: 1
#        - CapacityProvider: FARGATE_SPOT
#          Weight: 1
#      ClusterSettings:
#        - Name: containerInsights
#          Value: enabled
#      Tags:
#        - Key: Name
#          Value: !Sub ${StackAlias}BackendCluster
#
#  TaskExecutionRole:
#    Type: AWS::IAM::Role
#    Properties:
#      RoleName: !Sub ${StackAlias}TaskExecutionRole
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service: ecs-tasks.amazonaws.com
#            Action: sts:AssumeRole
#      ManagedPolicyArns:
#        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
#      Tags:
#        - Key: Name
#          Value: !Sub ${StackAlias}TaskExecutionRole
#
#  # Lemoland service
#  LemolandBackendService:
#    Type: AWS::ECS::Service
#    Properties:
#      ServiceName: !Sub ${StackAlias}LemolandBackendService
#      Cluster: !Ref LemolandBackendCluster
#      TaskDefinition: !Ref LemolandTaskDefinition
#      DesiredCount: 2
#      LaunchType: FARGATE
#      NetworkConfiguration:
#        AwsvpcConfiguration:
#          AssignPublicIp: DISABLED
#          Subnets: [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]
#          SecurityGroups: [ !Ref LemolandSecurityGroup ]
#      LoadBalancers:
#        - ContainerName: !Sub ${StackAlias}LemolandBackend
#          ContainerPort: !Ref LemolandBackendPort
#          TargetGroupArn: !Ref ALBTargetGroup
#      Tags:
#        - Key: Name
#          Value: !Sub ${StackAlias}GraphQLBackendService
#
#  LemolandBackendLogGroup:
#    Type: AWS::Logs::LogGroup
#    Properties:
#      LogGroupName: /aws/ecs/lemoland-backend
#      RetentionInDays: 7
#
#  LemolandTaskDefinition:
#    Type: AWS::ECS::TaskDefinition
#    Properties:
#      RequiresCompatibilities: [ FARGATE ]
#      Family: !Sub ${StackAlias}LemolandBackend
#      NetworkMode: awsvpc
#      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
#      ContainerDefinitions:
#        - Name: !Sub ${StackAlias}LemolandBackend
#          Image: !Ref LemolandBackendECRRepositoryURI
#          Essential: true
#          PortMappings:
#            - ContainerPort: !Ref LemolandBackendPort
#              Protocol: tcp
#          Environment:
#            - Name: PORT
#              Value: !Sub ${LemolandBackendPort}
#            - Name: DATABASE_HOST
#              Value: !GetAtt DatabaseInstance.Endpoint.Address
#            - Name: DATABASE_NAME
#              Value: !Sub ${DatabaseName}
#            - Name: DATABASE_PORT
#              Value: !Sub ${DatabasePort}
#            - Name: LOG_LEVEL
#              Value: !Sub ${LemolandLogLevel}
#            - Name: SERVE_SWAGGER
#              Value: !Sub ${LemolandServeSwagger}
#            - Name: DISCORD_GUILD_ID
#              Value: !Sub ${LemonlandDiscordGuildId}
#            - Name: ACCESS_KEY_CONTRACT_ADDRESS
#              Value: !Sub ${LemolandAccessKeyContractAddress}
#            - Name: GEMS_CONTRACT_ADDRESS
#              Value: !Sub ${LemolandGemsContractAddress}
#            - Name: REFERRAL_CONTRACT_ADDRESS
#              Value: !Sub ${LemolandReferralContractAddress}
#          Secrets:
#            - Name: DATABASE_USER
#              ValueFrom: !Sub '{{resolve:secretsmanager:${DatabaseSecret}:SecretString:username}}'
#            - Name: DATABASE_PASSWORD
#              ValueFrom: !Sub '{{resolve:secretsmanager:${DatabaseSecret}:SecretString:password}}'
#            - Name: JWT_SECRET
#              Value: !Sub '{{resolve:secretsmanager:${LemolandJwtSecret}:SecretString}}'
#            - Name: DISCORD_BOT_TOKEN
#              Value: !Sub '{{resolve:secretsmanager:${DiscordBotTokenSecret}:SecretString}}'
#            - Name: BLOCKCHAIN_PROVIDER_URL
#              Value: !Sub '{{resolve:secretsmanager:${BlockchainProviderUrl}:SecretString}}'
#            - Name: SERVER_PRIVATE_KEY
#              Value: !Sub '{{resolve:secretsmanager:${LemolandServerPrivateKey}:SecretString}}'
#          LogConfiguration:
#            LogDriver: awslogs
#            Options:
#              awslogs-group: !Ref LemolandBackendLogGroup
#              awslogs-region: !Ref 'AWS::Region'
#              awslogs-stream-prefix: ecs
#      Cpu: 256
#      Memory: 0.5 GB
#      RuntimePlatform:
#        CpuArchitecture: X86_64
#        OperatingSystemFamily: LINUX
#      Tags:
#        - Key: Name
#          Value: !Sub ${StackAlias}LemolandBackendTaskDefinition
